{"version":3,"sources":["component/Header.js","hooks/useFetch.js","component/VoteList.js","component/AddVotePage.js","component/DoItVote.js","component/DeleteVote.js","App.js","index.js"],"names":["Header","className","to","id","useFetch","url","useState","data","setData","useEffect","fetch","then","res","json","VoteList","vote","removeNan","users","map","votes","title","text","user","voteList","vs","content","Math","round","Number","number_of_votes","style","width","AddVotePage","numberOfVotes","history","useHistory","titleRef","useRef","textRef","onSubmit","e","preventDefault","addInput","document","querySelectorAll","i","length","value","method","headers","body","JSON","stringify","current","ok","alert","push","type","placeholder","ref","required","onClick","newIndex","createElement","getElementsByClassName","appendChild","DoItVote","useParams","voteTitle","doVoteLists","getElementsByName","firstVoteList","bol","j","checked","console","log","lists","name","DeleteVote","selectVotes","window","confirm","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.680bf484.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n    return <div className=\"header clearFix\">\r\n        <h1 className=\"headerH1\">\r\n            <Link to=\"/\">최근 투표리스트</Link>\r\n        </h1>\r\n        <Link to=\"/delete_vote\" id=\"addVote\"> 투표삭제 </Link>\r\n    </div>\r\n\r\n    \r\n}","import { useEffect, useState } from 'react';\r\n\r\nexport default function useFetch(url) {\r\n    const [data, setData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setData(data);\r\n               \r\n            })\r\n    }, [url]);\r\n\r\n    return data;\r\n}","import { Link } from \"react-router-dom\";\r\nimport useFetch from '../hooks/useFetch';/* 이거 만들어야함 */\r\n\r\nexport default function VoteList() {\r\n    const vote = useFetch(\"http://localhost:3001/vote\");\r\n    \r\n    \r\n\r\n    let removeNan = (users) => {\r\n        return (0 < users) ? 100/users : 0 ;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Link to=\"/create_vote\" className=\"createVote\">\r\n                <span></span>\r\n                <span></span>\r\n            </Link>\r\n            <ul className=\"vote_List\">\r\n                {vote.map(votes => (\r\n                    <li key={votes.id} className=\"voteListLi\">\r\n                        <Link to={`/vote/${votes.title}`}> \r\n                            <div className=\"voteWrapper\">\r\n                                <div className=\"voteListText\">\r\n                                    <h2>\r\n                                        {votes.title}\r\n                                    </h2>\r\n                                    <h3>\r\n                                        {votes.text}\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"personOfVoted\">\r\n                                    투표인원  <span>{votes.user}</span>명\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                        \r\n                        <div className=\"show_Stats\">\r\n                            <ul>\r\n                                {votes.voteList.map(vs => (\r\n                                    <li className=\"content_list\" key={vs.id}>\r\n                                        <h4>{vs.content} {Math.round(Number(vs.number_of_votes * removeNan(votes.user))) + \"%\"}</h4>\r\n                                        \r\n                                        <div className=\"contentlistBack\" style={{\r\n                                            width: vs.number_of_votes * removeNan(votes.user) + \"%\"\r\n                                            }}>\r\n\r\n                                        </div>\r\n                                    </li>\r\n                                    \r\n                                ))}\r\n                            </ul>\r\n                        </div>{/* show_Stats */}\r\n                    </li>\r\n                ))}\r\n            </ul>{/* vote_List */}\r\n        </>\r\n    )\r\n}","import { useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function AddVotePage() {\r\n    let numberOfVotes = [\r\n\r\n    ]/* 초기값 빈배열 */\r\n    const history = useHistory();\r\n\r\n    const titleRef = useRef(null);\r\n    const textRef = useRef(null);\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        let addInput = document.querySelectorAll('.add_input input');\r\n        \r\n        for(let i=0;i<addInput.length;i++){\r\n            numberOfVotes[i] = {\r\n                id: i+1,\r\n                content: addInput[i].value,\r\n                number_of_votes: 0,\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n\r\n        fetch(\"http://localhost:3001/vote\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                title: titleRef.current.value,\r\n                text: textRef.current.value,\r\n                voteList: numberOfVotes,\r\n                user: 0,\r\n            }),\r\n        }).then(res => {\r\n            if(res.ok) {\r\n                alert(\"새로운 투표가 생성 되었습니다!\");\r\n                history.push(\"/\");\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n    function addVoteIndex() {/* 항목을 추가하는 함수 */\r\n        const newIndex = document.createElement(\"input\");\r\n        const addInput = document.getElementsByClassName('add_input');\r\n        newIndex.type = \"text\";\r\n        newIndex.placeholder = \"항목입력\";\r\n        \r\n        addInput[0].appendChild(newIndex);\r\n        \r\n    }\r\n\r\n    return (\r\n        <form className=\"addVoteForm\" onSubmit={onSubmit}>\r\n            <h2>투표만들기</h2>\r\n            <div className=\"input_area\">\r\n                <input type=\"text\" placeholder=\"투표 제목\" ref={titleRef} required />\r\n            </div>\r\n            <div className=\"input_area text_area\">\r\n                <label>텍스트</label>\r\n                <input type=\"text\" placeholder=\"멤버에게 전할 소식을 남겨보세요\" ref={textRef} required />\r\n            </div>\r\n            <div className=\"add_input input_area\">\r\n                <label>투표항목</label>\r\n                <input type=\"text\" placeholder=\"항목입력\" required /> {/* 초기 input 추가할지 아님 처음부터 없앨지 고민해봐야함 */}\r\n                <input type=\"text\" placeholder=\"항목입력\" required />\r\n            </div>\r\n            <div className=\"addVoteList\" onClick={addVoteIndex}>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n            <button className=\"voteCreateBtn\">\r\n                만들기\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\n/* 값들을 db에 보내주기 */","import { useHistory, useParams } from \"react-router-dom\"\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nexport default function DoItVote() {\r\n    const title  = useParams().title;\r\n    const history = useHistory();\r\n    let voteTitle = useFetch(`http://localhost:3001/vote?title=${title}`);\r\n    \r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        const doVoteLists = document.getElementsByName(\"doVoteList\");\r\n\r\n        let firstVoteList = voteTitle[0].voteList;\r\n        let bol = false;\r\n\r\n        for(let j=0;j<doVoteLists.length;j++){\r\n            if(doVoteLists[j].checked){\r\n                bol = true\r\n            }\r\n        }/* 체그유무를 비교해서 불린타입에 맞게 이벤트 실행 */\r\n\r\n        if(bol){\r\n\r\n\r\n            for(let i=0;i<doVoteLists.length;i++){\r\n                console.log(doVoteLists[i].checked);\r\n                if(doVoteLists[i].checked){\r\n                    firstVoteList[i].number_of_votes += 1;   \r\n                }\r\n    \r\n            }\r\n            \r\n            fetch(`http://localhost:3001/vote/${voteTitle[0].id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    ...voteTitle[0],\r\n                    user: voteTitle[0].user += 1,\r\n                    voteList: firstVoteList\r\n                }),\r\n            }).then(res => {\r\n                if(res.ok) {\r\n                    alert(\"반영되었습니다!\");\r\n                    history.push(\"/\")\r\n                }\r\n            })/* db에 반영 */\r\n\r\n\r\n        }else{\r\n            alert(\"하나이상 체크해야합니다\");\r\n        }\r\n\r\n    }/* 서브밋 이벤트 종료 */\r\n    \r\n    return (\r\n        <>\r\n            {voteTitle.map((vote) => (\r\n                <div className=\"do_vote\" key={vote.id}>\r\n                    <h2>{vote.title}</h2>\r\n                    <form onSubmit={onSubmit}>\r\n                        {vote.voteList.map((lists) => (\r\n                            <label key={lists.id}><input type=\"radio\" name=\"doVoteList\" />{lists.content}</label>\r\n                        ))}\r\n                        <button>\r\n                            투표하기\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            ))}\r\n        </>  \r\n    )\r\n    /* useFetch로 가져와서(배열로 할당되어있기때문) map을 사용해야함 */\r\n    \r\n}\r\n","import useFetch from \"../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function DeleteVote() {\r\n    const vote = useFetch(\"http://localhost:3001/vote\");\r\n    const history = useHistory();\r\n\r\n    function deleteConfirm(selectVotes) {\r\n        if(window.confirm(\"정말 삭제하시겠습니까?\")){\r\n            fetch(`http://localhost:3001/vote/${selectVotes.id}`, {\r\n                method : \"DELETE\",\r\n            }).then(res => {\r\n                if(res.ok){\r\n                    alert(\"삭제되었습니다.\");\r\n                    history.push(\"/\");\r\n                }\r\n            });\r\n            /* console.log(selectVotes.id) */\r\n            /* 삭제구문 */\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n                <ul className=\"deletUl\">\r\n                    {vote.map(votes => (\r\n                        <li key={votes.id} className=\"clearFix\">\r\n                            <h2>{votes.title}</h2>\r\n                            <button onClick={ () => deleteConfirm(votes) }>삭제</button>\r\n                        </li>\r\n                        \r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n/* jsx에서 인자를 넘겨주는 방법은 화살표 함수를 이용하는것이다 (괄호를 넣은 함수는 당연하게도 즉시 실행된다) */\r\n/* 삭제 할수 있게 구현 - 존재 하는 모든 투표리스트를 불러와서 선택하면 삭제 되게 할것임 */","import { BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Header from \"./component/Header\";\nimport VoteList from \"./component/VoteList\";\nimport AddVotePage from \"./component/AddVotePage\";\nimport DoItVote from \"./component/DoItVote\";\nimport DeleteVote from \"./component/DeleteVote\";\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n       <Header />\n       <Switch>\n        <Route exact path=\"/\">\n          <VoteList />\n        </Route>\n        <Route exact path=\"/delete_vote\">\n          <DeleteVote />  \n        </Route>\n        <Route exact path=\"/vote/:title\">\n          <DoItVote />\n        </Route>\n        <Route exact path=\"/create_vote\">\n          <AddVotePage />\n        </Route>\n       </Switch>\n      </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}